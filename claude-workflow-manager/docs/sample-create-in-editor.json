{"prompt":"Create a design to create code, update code, and fix code inside a text editor where changes will be shown in-line via a tool call.","mode":"create"}

data: {"type": "status", "agent": "Design Generator", "data": "executing"}

data: {"type": "chunk", "data": "```json\n{\n  \"name\": \"Code Editor Assistant\",\n  \"description\": \"Orchestration design for creating, updating, and fixing code with in-line changes via tool calls\",\n  \"blocks\": [\n    {\n      \"id\": \"block-1\",\n      \"type\": \"routing\",\n      \"position\": {\"x\": 50, \"y\": 50},\n      \"data\": {\n        \"label\": \"Intent Router\",\n        \"agents\": [\n          {\n            \"id\": \"agent-1\",\n            \"name\": \"Intent Classifier\",\n            \"system_prompt\": \"Classify the user request into exactly one category: 'create', 'update', or 'fix'. Output only the category word, nothing else.\",\n            \"role\": \"specialist\"\n          }\n        ],\n        \"task\": \"Determine whether the user wants to create new code, update existing code, or fix buggy code\"\n      }\n    },\n    {\n      \"id\": \"block-2\",\n      \"type\": \"sequential\",\n      \"position\": {\"x\": 450, \"y\": 50},\n      \"data\": {\n        \"label\": \"Code Creator\",\n        \"agents\": [\n          {\n            \"id\": \"agent-2\",\n            \"name\": \"Code Generator\",\n            \"system_prompt\": \"Generate complete, working code based on requirements. Use Write tool for new files. Include comments for complex logic only. Output the file path and brief summary.\",\n            \"role\": \"specialist\"\n          }\n        ],\n        \"task\": \"Create new code files from scratch based on user specifications\"\n      }\n    },\n    {\n      \"id\": \"block-3\",\n      \"type\": \"sequential\",\n      \"position\": {\"x\": 450, \"y\": 250},\n      \"data\": {\n        \"label\": \"Code Updater\",\n        \"agents\": [\n          {\n            \"id\": \"agent-3\",\n            \"name\": \"Code Editor\",\n            \"system_prompt\": \"Read existing file using Read tool, then apply requested changes using Edit tool with exact string replacement. Verify changes are minimal and targeted. Output what was changed.\",\n            \"role\": \"specialist\"\n          }\n        ],\n        \"task\": \"Update existing code by reading files and making precise edits\"\n      }\n    },\n    {\n      \"id\": \"block-4\",\n      \"type\": \"sequential\",\n      \"position\": {\"x\": 450, \"y\": 450},\n      \"data\": {\n        \"label\": \"Code Fixer\",\n        \"agents\": [\n          {\n            \"id\": \"agent-4\",\n            \"name\": \"Bug Analyzer\",\n            \"system_prompt\": \"Read the file and identify the specific bug. Output one sentence describing the issue and the exact line numbers affected.\",\n            \"role\": \"specialist\"\n          },\n          {\n            \"id\": \"agent-5\",\n            \"name\": \"Bug Fixer\",\n            \"system_prompt\": \"Use Edit tool to fix the identified bug with minimal changes. Preserve formatting and style. Output the fix applied in one sentence.\",\n            \"role\": \"specialist\"\n          }\n        ],\n        \"task\": \"Analyze and fix bugs in existing code with minimal changes\"\n      }\n    },\n    {\n      \"id\": \"block-5\",\n      \"type\": \"sequential\",\n      \"position\": {\"x\": 850, \"y\": 250},\n      \"data\": {\n        \"label\": \"Verification\",\n        \"agents\": [\n          {\n            \"id\": \"agent-6\",\n            \"name\": \"Change Verifier\",\n            \"system_prompt\": \"Read the modified file and confirm changes are correct. Output 'VERIFIED' if correct or list issues in one sentence each.\",\n            \"role\": \"specialist\"\n          }\n        ],\n        \"task\": \"Verify that code changes were applied correctly\"\n      }\n    }\n  ],\n  \"connections\": [\n    {\n      \"id\": \"conn-1\",\n      \"source\": \"block-1\",\n      \"target\": \"block-2\",\n      \"type\": \"block\"\n    },\n    {\n      \"id\": \"conn-2\",\n      \"source\": \"block-1\",\n      \"target\": \"block-3\",\n      \"type\": \"block\"\n    },\n    {\n      \"id\": \"conn-3\",\n      \"source\": \"block-1\",\n      \"target\": \"block-4\",\n      \"type\": \"block\"\n    },\n    {\n      \"id\": \"conn-4\",\n      \"source\": \"block-2\",\n      \"target\": \"block-5\",\n      \"type\": \"block\"\n    },\n    {\n      \"id\": \"conn-5\",\n      \"source\": \"block-3\",\n      \"target\": \"block-5\",\n      \"type\": \"block\"\n    },\n    {\n      \"id\": \"conn-6\",\n      \"source\": \"block-4\",\n      \"target\": \"block-5\",\n      \"type\": \"block\"\n    }\n  ],\n  \"git_repos\": []\n}\n```"}

data: {"type": "status", "agent": "Design Generator", "data": "completed"}

data: {"type": "complete", "design": {"name": "Code Editor Assistant", "description": "Orchestration design for creating, updating, and fixing code with in-line changes via tool calls", "blocks": [{"id": "block-1", "type": "routing", "position": {"x": 50, "y": 50}, "data": {"label": "Intent Router", "agents": [{"id": "agent-1", "name": "Intent Classifier", "system_prompt": "Classify the user request into exactly one category: 'create', 'update', or 'fix'. Output only the category word, nothing else.", "role": "specialist"}], "task": "Determine whether the user wants to create new code, update existing code, or fix buggy code"}}, {"id": "block-2", "type": "sequential", "position": {"x": 450, "y": 50}, "data": {"label": "Code Creator", "agents": [{"id": "agent-2", "name": "Code Generator", "system_prompt": "Generate complete, working code based on requirements. Use Write tool for new files. Include comments for complex logic only. Output the file path and brief summary.", "role": "specialist"}], "task": "Create new code files from scratch based on user specifications"}}, {"id": "block-3", "type": "sequential", "position": {"x": 450, "y": 250}, "data": {"label": "Code Updater", "agents": [{"id": "agent-3", "name": "Code Editor", "system_prompt": "Read existing file using Read tool, then apply requested changes using Edit tool with exact string replacement. Verify changes are minimal and targeted. Output what was changed.", "role": "specialist"}], "task": "Update existing code by reading files and making precise edits"}}, {"id": "block-4", "type": "sequential", "position": {"x": 450, "y": 450}, "data": {"label": "Code Fixer", "agents": [{"id": "agent-4", "name": "Bug Analyzer", "system_prompt": "Read the file and identify the specific bug. Output one sentence describing the issue and the exact line numbers affected.", "role": "specialist"}, {"id": "agent-5", "name": "Bug Fixer", "system_prompt": "Use Edit tool to fix the identified bug with minimal changes. Preserve formatting and style. Output the fix applied in one sentence.", "role": "specialist"}], "task": "Analyze and fix bugs in existing code with minimal changes"}}, {"id": "block-5", "type": "sequential", "position": {"x": 850, "y": 250}, "data": {"label": "Verification", "agents": [{"id": "agent-6", "name": "Change Verifier", "system_prompt": "Read the modified file and confirm changes are correct. Output 'VERIFIED' if correct or list issues in one sentence each.", "role": "specialist"}], "task": "Verify that code changes were applied correctly"}}], "connections": [{"id": "conn-1", "source": "block-1", "target": "block-2", "type": "block"}, {"id": "conn-2", "source": "block-1", "target": "block-3", "type": "block"}, {"id": "conn-3", "source": "block-1", "target": "block-4", "type": "block"}, {"id": "conn-4", "source": "block-2", "target": "block-5", "type": "block"}, {"id": "conn-5", "source": "block-3", "target": "block-5", "type": "block"}, {"id": "conn-6", "source": "block-4", "target": "block-5", "type": "block"}], "git_repos": []}}

Create a UI page that allows the user to file explore a repository of their choice (from the dropdown of repositories) and also be able to edit files that they select in the interface.  Make this interface's features accessible to the agent orchestration design as a tool call (eg, in-line editor changes, file move, folder create, rollback change, approve change, etc) to the agents in the design.  This way we can design an agent orchestration and implement it inside the editor to run upon the editor's features.  Here is an example design that allows agents to create code, update code, and fix code inside a text editor where changes will be shown in-line via a tool call.

"design": {"name": "Code Editor Assistant", "description": "Orchestration design for creating, updating, and fixing code with in-line changes via tool calls", "blocks": [{"id": "block-1", "type": "routing", "position": {"x": 50, "y": 50}, "data": {"label": "Intent Router", "agents": [{"id": "agent-1", "name": "Intent Classifier", "system_prompt": "Classify the user request into exactly one category: 'create', 'update', or 'fix'. Output only the category word, nothing else.", "role": "specialist"}], "task": "Determine whether the user wants to create new code, update existing code, or fix buggy code"}}, {"id": "block-2", "type": "sequential", "position": {"x": 450, "y": 50}, "data": {"label": "Code Creator", "agents": [{"id": "agent-2", "name": "Code Generator", "system_prompt": "Generate complete, working code based on requirements. Use Write tool for new files. Include comments for complex logic only. Output the file path and brief summary.", "role": "specialist"}], "task": "Create new code files from scratch based on user specifications"}}, {"id": "block-3", "type": "sequential", "position": {"x": 450, "y": 250}, "data": {"label": "Code Updater", "agents": [{"id": "agent-3", "name": "Code Editor", "system_prompt": "Read existing file using Read tool, then apply requested changes using Edit tool with exact string replacement. Verify changes are minimal and targeted. Output what was changed.", "role": "specialist"}], "task": "Update existing code by reading files and making precise edits"}}, {"id": "block-4", "type": "sequential", "position": {"x": 450, "y": 450}, "data": {"label": "Code Fixer", "agents": [{"id": "agent-4", "name": "Bug Analyzer", "system_prompt": "Read the file and identify the specific bug. Output one sentence describing the issue and the exact line numbers affected.", "role": "specialist"}, {"id": "agent-5", "name": "Bug Fixer", "system_prompt": "Use Edit tool to fix the identified bug with minimal changes. Preserve formatting and style. Output the fix applied in one sentence.", "role": "specialist"}], "task": "Analyze and fix bugs in existing code with minimal changes"}}, {"id": "block-5", "type": "sequential", "position": {"x": 850, "y": 250}, "data": {"label": "Verification", "agents": [{"id": "agent-6", "name": "Change Verifier", "system_prompt": "Read the modified file and confirm changes are correct. Output 'VERIFIED' if correct or list issues in one sentence each.", "role": "specialist"}], "task": "Verify that code changes were applied correctly"}}], "connections": [{"id": "conn-1", "source": "block-1", "target": "block-2", "type": "block"}, {"id": "conn-2", "source": "block-1", "target": "block-3", "type": "block"}, {"id": "conn-3", "source": "block-1", "target": "block-4", "type": "block"}, {"id": "conn-4", "source": "block-2", "target": "block-5", "type": "block"}, {"id": "conn-5", "source": "block-3", "target": "block-5", "type": "block"}, {"id": "conn-6", "source": "block-4", "target": "block-5", "type": "block"}], "git_repos": []}