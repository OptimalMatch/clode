# Production Docker Compose Configuration
# For development with hot reload, use: docker-compose -f docker-compose.dev.yml up

services:
  mongodb:
    image: mongo:7.0
    container_name: claude-workflow-mongo
    restart: always
    ports:
      - "27020:27017"
    cpus: 1.0
    mem_limit: 4g
    mem_reservation: 2g
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: claude_workflows
    volumes:
      - mongo_data:/data/db
    networks:
      - claude-network

  backend:
    build: ./backend
    container_name: claude-workflow-backend
    restart: always
    ports:
      - "8005:8000"
    cpus: 4.0                # Cap to 4 CPU cores
    mem_limit: 2g            # Hard max memory
    mem_reservation: 1.5g    # Soft reservation
    environment:
      MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongodb:27017/claude_workflows?authSource=admin
      CLAUDE_API_KEY: ${CLAUDE_API_KEY}
      ANTHROPIC_API_KEY: ${CLAUDE_API_KEY}
      REDIS_URL: redis://redis:6379
      CLAUDE_PROMPTS_FOLDER: ${CLAUDE_PROMPTS_FOLDER:-.clode/claude_prompts}
      CLAUDE_AGENTS_FOLDER: ${CLAUDE_AGENTS_FOLDER:-.claude/agents}
      USE_CLAUDE_MAX_PLAN: ${USE_CLAUDE_MAX_PLAN:-false}
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./backend:/app/src
      - ~/.claude:/root/.claude:ro  # Mount Claude authentication (read-only)
      - ${HOME}/.ssh:/root/.ssh:ro
      - ssh_known_hosts:/root/.ssh_known_hosts
      - ssh_generated_keys:/app/ssh_keys
    networks:
      - claude-network

  frontend:
    build:
      context: ./frontend
      args:
        REACT_APP_API_URL: http://${HOST_IP:-localhost}:8005
        REACT_APP_WS_URL: ws://${HOST_IP:-localhost}:8005
        REACT_APP_API_PORT: 8005
    container_name: claude-workflow-frontend
    restart: always
    ports:
      - "3005:3000"
    cpus: 0.5
    mem_limit: 512m
    mem_reservation: 256m
    depends_on:
      - backend
    # volumes:
      # - ./frontend:/app
      # - /app/node_modules
    # Note: Volume mounts disabled for production deployment to avoid dev server WebSocket issues
    networks:
      - claude-network

  redis:
    image: redis:7-alpine
    container_name: claude-workflow-redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - claude-network

volumes:
  mongo_data:
  ssh_known_hosts:
  ssh_generated_keys:

networks:
  claude-network:
    driver: bridge