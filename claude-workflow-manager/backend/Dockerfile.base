# Backend Base Image - Contains all OS packages and Python dependencies
# This image is built separately and cached for fast deployments
FROM ubuntu:22.04

# Set non-interactive mode to avoid prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install all required packages in one optimized layer (Ubuntu repos are fast!)
RUN apt-get update && apt-get install -y --no-install-recommends \
    # Core system
    ca-certificates \
    curl \
    wget \
    unzip \
    zip \
    sudo \
    # Python stack
    python3 \
    python3-pip \
    python3-venv \
    # Development tools
    git \
    openssh-client \
    build-essential \
    # Common development tools often needed by projects
    default-jdk \
    maven \
    gradle \
    make \
    cmake \
    vim \
    nano \
    && curl -fsSL https://deb.nodesource.com/setup_18.x | bash - \
    && apt-get install -y nodejs \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* \
    && ln -s /usr/bin/python3 /usr/bin/python

# Install Claude Code CLI globally
RUN npm config set registry https://registry.npmjs.org/ && \
    npm install -g @anthropic-ai/claude-code --timeout=60000 || \
    (echo "⚠️ Claude CLI installation failed, will retry at runtime" && exit 0)

# Create Python virtual environment and ensure proper PATH
RUN python3 -m venv /opt/venv
ENV PATH="/opt/venv/bin:/root/.local/bin:$PATH"

# Create non-root user for better security
RUN useradd -m -s /bin/bash claude && \
    # Add passwordless sudo ONLY for package managers (doesn't interfere with Claude autonomous mode)
    echo "claude ALL=(ALL) NOPASSWD: /usr/bin/apt-get, /usr/bin/apt, /usr/bin/dpkg, /usr/bin/npm, /usr/bin/pip, /usr/bin/pip3" > /etc/sudoers.d/claude && \
    chmod 0440 /etc/sudoers.d/claude

# Set up SSH configuration for claude user
RUN mkdir -p /home/claude/.ssh && \
    chmod 700 /home/claude/.ssh && \
    ssh-keyscan -H github.com >> /home/claude/.ssh/known_hosts && \
    ssh-keyscan -H gitlab.com >> /home/claude/.ssh/known_hosts && \
    ssh-keyscan -H bitbucket.org >> /home/claude/.ssh/known_hosts && \
    chmod 644 /home/claude/.ssh/known_hosts && \
    chown -R claude:claude /home/claude/.ssh

# Install Python dependencies (copy requirements.txt for this step)
WORKDIR /app
COPY requirements.txt .
RUN /opt/venv/bin/pip install --no-cache-dir -r requirements.txt

# Create necessary directories
RUN mkdir -p /app/src /app/project /home/claude/.claude /app/ssh_keys && \
    chown -R claude:claude /home/claude/.claude /app/ssh_keys

# Set Python path and ensure PATH includes venv
ENV PYTHONPATH="/app:/app/src:${PYTHONPATH}"
ENV PATH="/opt/venv/bin:/root/.local/bin:$PATH"

# Switch to claude user for runtime
USER claude

# Ensure PATH includes venv for claude user
ENV PATH="/opt/venv/bin:/root/.local/bin:$PATH"

WORKDIR /app
EXPOSE 8000

# Default command (will be overridden by deployment Dockerfile)
CMD ["/opt/venv/bin/uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000", "--reload"]
